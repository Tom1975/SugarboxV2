name: MacOS

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master", "develop" ]
  workflow_call:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on:  macOS-latest
    strategy:
      matrix:
        os: [ macOS-latest, windows-latest]
        include:
          - os: macOS-latest
            qt_version: 'clang_64'            
            cmake_arg: '' 
            other_installer: 'brew install openal-soft && brew install qt5 && export Qt5_DIR=$(brew --prefix)/opt/qt5'
            build_folder: /build 
            install_folder: /install
          - os: windows-latest
            qt_version: 'win32_msvc2017'
            cmake_arg: '-AWin32 -DGENERATE_UNITTESTS=TRUE' 
            other_installer: 'echo No more installer needed'
            build_folder: \build 
            install_folder: \install
          
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '5.14.2'
        target: 'desktop'
        arch: ${{ matrix.qt_version }}
        install-deps: 'true'
        
    - name: Install udev
      run: ${{ matrix.other_installer }}
        
    - name: Checkout submodules
      run: git submodule update --init --recursive 

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}${{matrix.build_folder}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}${{ matrix.install_folder }} ${{ matrix.cmake_arg }}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}${{matrix.build_folder}} --config ${{env.BUILD_TYPE}} 

    - name: Install
      # Make install
      run: cmake --install ${{github.workspace}}${{matrix.build_folder}}

    - name: Packaging
      # CPack time
      working-directory: ${{github.workspace}}${{matrix.build_folder}}
      run: cpack -G 7Z .
      
    - name: Archive zip
      uses: actions/upload-artifact@v3
      with:
          name: SugarboxV2Win32
          path: ${{github.workspace}}/build/*.7z
          
          
          
